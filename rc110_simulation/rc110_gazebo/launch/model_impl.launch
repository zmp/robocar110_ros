<launch>
    <arg name="gns" default="/$(var rc)"/>
    <arg name="rc" default="$(env RC110_NAME)"/>
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="a" default="0.0"/>

    <include file="$(find-pkg-share rc110)/launch/common.launch">
        <arg name="tf_prefix" value="$(var rc)"/>
    </include>

    <!-- instantiate robot model in the world with x and y setting odom->base_link tf -->
    <!-- <param name="tf_prefix" value="$(var rc)"/> -->

    <node pkg="gazebo_ros" exec="spawn_entity.py" name="robot_spawner"
        args="-file $(find-pkg-share rc110)/models/rc110/model.sdf -entity $(var rc)
            -gazebo_namespace $(var gns)/gazebo
            -x $(var x) -y $(var y) -z 0.0 -R 0.0 -P 0.0 -Y 0.0"/>

    <!-- workaround for gazebo_ros_imu_sensor, which adds prefix to frame_id -->


    <!-- simulation of rc110_drive_control (more or less) -->
    <node pkg="rc110_gazebo" exec="rc110_gazebo" name="drive_control">
        <param name="base_frame_id" value="$(var rc)/base_link"/>
    </node>

    <!-- initialize amcl with correct position -->
    <!-- <param name="amcl/initial_pose_x" value="$(var x)"/>
    <param name="amcl/initial_pose_y" value="$(var y)"/>
    <param name="amcl/initial_pose_a" value="$(var a)"/> -->

</launch>